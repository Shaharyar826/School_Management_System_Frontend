import ngrok from 'ngrok';
import chalk from 'chalk';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get the directory name
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Configuration
const port = 5173; // Vite's default port
const configPath = path.join(__dirname, '.ngrok-config.json');

// Check if config file exists
let authtoken = null;
if (fs.existsSync(configPath)) {
  try {
    const config = JSON.parse(fs.readFileSync(configPath, 'utf8'));
    authtoken = config.authtoken;
  } catch (error) {
    console.error(chalk.red('Error reading ngrok config:'), error);
  }
}

async function startNgrok() {
  console.log(chalk.blue('Starting ngrok tunnel...'));

  try {
    // Connect to ngrok
    const url = await ngrok.connect({
      addr: port,
      authtoken: authtoken,
      region: 'us',
      onStatusChange: status => {
        console.log(chalk.yellow(`Ngrok Status: ${status}`));
      },
      onLogEvent: data => {
        if (data.includes('error')) {
          console.log(chalk.red(`Ngrok Log: ${data}`));
        }
      }
    });

    // Extract domain for Vite configuration
    const domain = new URL(url).hostname;
    console.log(chalk.blue(`Ngrok domain: ${domain}`));

    // Create a temporary Vite config that includes this specific domain
    const configContent = `
    // This file is auto-generated by ngrok.js
    // It will be overwritten each time you start the tunnel
    export const NGROK_DOMAIN = "${domain}";
    `;

    fs.writeFileSync(path.join(__dirname, 'src', 'ngrok-domain.js'), configContent);

    console.log(chalk.green('Created temporary config with ngrok domain'));

    console.log(chalk.green('âœ“ Ngrok tunnel is running!'));
    console.log(chalk.yellow(`URL: ${url}`));
    console.log(chalk.cyan('You can access your app from anywhere using this URL'));
    console.log(chalk.cyan('SHARE THIS URL WITH YOUR FRIENDS: ') + chalk.bold.yellow(url));
    console.log(chalk.gray('Press Ctrl+C to stop the tunnel'));

    // Create a shareable HTML file with the link
    const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <title>Your Shareable Link</title>
      <style>
        body { font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; }
        .url-box { background: #f0f0f0; padding: 15px; border-radius: 5px; margin: 20px 0; }
        .url { font-size: 18px; word-break: break-all; color: #0066cc; }
        .copy-btn { background: #4CAF50; color: white; border: none; padding: 10px 15px;
                   border-radius: 4px; cursor: pointer; margin-top: 10px; }
        .copy-btn:hover { background: #45a049; }
        h1 { color: #333; }
      </style>
    </head>
    <body>
      <h1>Your Website Shareable Link</h1>
      <p>Share this link with your friends to let them see your website:</p>
      <div class="url-box">
        <div class="url" id="url">${url}</div>
        <button class="copy-btn" onclick="copyUrl()">Copy Link</button>
      </div>
      <p><strong>Note:</strong> This link will only work while your ngrok tunnel is running.</p>
      <script>
        function copyUrl() {
          const urlText = document.getElementById('url').innerText;
          navigator.clipboard.writeText(urlText)
            .then(() => alert('Link copied to clipboard!'))
            .catch(err => console.error('Error copying text: ', err));
        }
      </script>
    </body>
    </html>
    `;

    // Save URL to a file for easy access
    fs.writeFileSync(path.join(__dirname, '.tunnel-url'), url);
    fs.writeFileSync(path.join(__dirname, 'share-link.html'), htmlContent);

    console.log(chalk.magenta('A shareable HTML file has been created at: ') +
                chalk.bold('frontend/share-link.html'));

    // Handle process termination
    process.on('SIGINT', async () => {
      console.log(chalk.blue('Shutting down ngrok tunnel...'));
      await ngrok.kill();
      process.exit(0);
    });

  } catch (error) {
    console.error(chalk.red('Failed to start ngrok:'), error);

    if (!authtoken) {
      console.log(chalk.yellow('No authtoken found. You may need to sign up for ngrok and add your authtoken.'));
      console.log(chalk.yellow('Visit https://ngrok.com to sign up (free).'));
      console.log(chalk.yellow(`Then create a file at ${configPath} with:`));
      console.log(chalk.gray('{"authtoken": "YOUR_AUTHTOKEN"}'));
    }

    process.exit(1);
  }
}

startNgrok();
